<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:cxf="http://cxf.apache.org/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://cxf.apache.org/jaxws 
         http://cxf.apache.org/schemas/jaxws.xsd 
         http://cxf.apache.org/jaxrs 
         http://cxf.apache.org/schemas/jaxrs.xsd">

	<context:annotation-config />

	<!-- 让Spring通过自动扫描来查询和管理Bean -->
	<context:component-scan base-package="com.artificialliver" />

	<!-- cxf web service 配置 -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

<!-- 	<bean id="operationInfo" class="com.artificialliver.model.OperationInfo">
	</bean>
	<bean id="reporter" class="com.artificialliver.reporter.Reporter">
		<property name="operationInfo">
			<ref bean="operationInfo" />
		</property>
	</bean> -->

	<bean id="ArtificialliverService"
		class="com.artificialliver.api.impl.ArtificialliverServiceImpl" />
	<jaxrs:server id="service" address="/artificialliver">
		<jaxrs:serviceBeans>
			<ref bean="ArtificialliverService" />
		</jaxrs:serviceBeans>
	</jaxrs:server>

	<!-- 数据库配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/artificial_liver?autoReconnect=true&amp;characterEncoding=UTF-8"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		<property name="maxActive" value="100"></property>
		<property name="maxIdle" value="30"></property>
		<property name="maxWait" value="500"></property>
		<property name="defaultAutoCommit" value="true"></property>
	</bean>

	<!-- MyBatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
	</bean> 

	<!-- MapperScannerConfigurer来帮我们自动扫描和注册Mapper接口的话 需要在Spring的applicationContext配置文件中定义一个MapperScannerConfigurer对应的bean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.artificialliver.mapper" />
	</bean> 

	<!-- 事务管理配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置注解实现管理事务(cglib：proxy-target-class="true") -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>
